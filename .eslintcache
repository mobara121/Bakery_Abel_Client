[{"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\index.js":"1","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\App.js":"2","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Navbar\\Navbar.jsx":"3","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Products.jsx":"4","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Navbar\\styles.js":"5","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\styles.js":"6","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Product\\Product.jsx":"7","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Product\\style.js":"8","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\index.js":"9","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Cart\\Cart.jsx":"10","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Cart\\styles.js":"11","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\Checkout.jsx":"12","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\styles.js":"13","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\ContactForm.jsx":"14","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\ConfirmForm.jsx":"15","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Home\\Home.jsx":"16","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Home\\styles.js":"17","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\OrderDetails\\OrderDetails.jsx":"18","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\OrderDetails\\styles.js":"19","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\index.js":"20","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\App.js":"21","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\ConfirmForm.jsx":"22","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\styles.js":"23","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\index.js":"24","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\Checkout.jsx":"25","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Navbar\\Navbar.jsx":"26","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Home\\Home.jsx":"27","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Products.jsx":"28","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Cart\\Cart.jsx":"29","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\OrderDetails\\OrderDetails.jsx":"30","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Navbar\\styles.js":"31","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Home\\styles.js":"32","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\styles.js":"33","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Cart\\styles.js":"34","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\OrderDetails\\styles.js":"35","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\ContactForm.jsx":"36","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Product\\Product.jsx":"37","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Product\\style.js":"38"},{"size":221,"mtime":1614284198432,"results":"39","hashOfConfig":"40"},{"size":12012,"mtime":1616536427425,"results":"41","hashOfConfig":"40"},{"size":1563,"mtime":1616506753113,"results":"42","hashOfConfig":"40"},{"size":784,"mtime":1616439311113,"results":"43","hashOfConfig":"40"},{"size":1631,"mtime":1614302963606,"results":"44","hashOfConfig":"40"},{"size":298,"mtime":1614305302485,"results":"45","hashOfConfig":"40"},{"size":2723,"mtime":1616447571331,"results":"46","hashOfConfig":"40"},{"size":541,"mtime":1614525464412,"results":"47","hashOfConfig":"40"},{"size":368,"mtime":1615993037242,"results":"48","hashOfConfig":"40"},{"size":5724,"mtime":1616509488090,"results":"49","hashOfConfig":"40"},{"size":1601,"mtime":1615840282760,"results":"50","hashOfConfig":"40"},{"size":785,"mtime":1615481047385,"results":"51","hashOfConfig":"40"},{"size":1263,"mtime":1616007786821,"results":"52","hashOfConfig":"40"},{"size":2553,"mtime":1615481032255,"results":"53","hashOfConfig":"40"},{"size":8461,"mtime":1616536431089,"results":"54","hashOfConfig":"40"},{"size":993,"mtime":1615904283384,"results":"55","hashOfConfig":"40"},{"size":962,"mtime":1615824748641,"results":"56","hashOfConfig":"40"},{"size":1688,"mtime":1616463923714,"results":"57","hashOfConfig":"40"},{"size":888,"mtime":1616079440533,"results":"58","hashOfConfig":"40"},{"size":221,"mtime":1614284198432,"results":"59","hashOfConfig":"60"},{"size":12012,"mtime":1616536427425,"results":"61","hashOfConfig":"60"},{"size":8461,"mtime":1616536431089,"results":"62","hashOfConfig":"60"},{"size":1263,"mtime":1616007786821,"results":"63","hashOfConfig":"60"},{"size":368,"mtime":1615993037242,"results":"64","hashOfConfig":"60"},{"size":785,"mtime":1615481047385,"results":"65","hashOfConfig":"60"},{"size":1563,"mtime":1616506753113,"results":"66","hashOfConfig":"60"},{"size":993,"mtime":1615904283384,"results":"67","hashOfConfig":"60"},{"size":784,"mtime":1616439311113,"results":"68","hashOfConfig":"60"},{"size":5724,"mtime":1616509488090,"results":"69","hashOfConfig":"60"},{"size":1688,"mtime":1616463923714,"results":"70","hashOfConfig":"60"},{"size":1631,"mtime":1614302963606,"results":"71","hashOfConfig":"60"},{"size":962,"mtime":1615824748641,"results":"72","hashOfConfig":"60"},{"size":298,"mtime":1614305302485,"results":"73","hashOfConfig":"60"},{"size":1601,"mtime":1615840282760,"results":"74","hashOfConfig":"60"},{"size":888,"mtime":1616079440533,"results":"75","hashOfConfig":"60"},{"size":2553,"mtime":1615481032255,"results":"76","hashOfConfig":"60"},{"size":2723,"mtime":1616447571331,"results":"77","hashOfConfig":"60"},{"size":541,"mtime":1614525464412,"results":"78","hashOfConfig":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"ju657t",{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xbl3p1",{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\index.js",[],["164","165"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\App.js",["166","167","168"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Navbar\\Navbar.jsx",["169","170"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Products.jsx",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Product\\Product.jsx",["171"],"import React, {useState} from 'react';\r\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton} from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { AddShoppingCart } from '@material-ui/icons';\r\n\r\nimport useStyles from './style';\r\n\r\nconst Product = ({product, cart, onAddToCart}) => {\r\n    const classes = useStyles();\r\n\r\n    const [quantity, setQuantity] = useState('');\r\n\r\n    var subtotal_price = quantity * product.unit_price\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardMedia className={classes.media} image={product.image} title={product.name}/>\r\n                <CardContent>\r\n                    <div className={classes.cardContent}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {product.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            ${product.unit_price}/ea.\r\n                        </Typography>\r\n                    </div>\r\n                    \r\n                </CardContent> \r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <label style={{marginTop:'5px', fontSize:'15px'}}>Quantity</label>\r\n                        <Select style={{margin: '0 10px', width: '60px', textAlign: 'center'}}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={quantity}\r\n                        onChange={(e)=>setQuantity(e.target.value)}\r\n                        >\r\n                            <MenuItem value={1}>1</MenuItem>\r\n                            <MenuItem value={2}>2</MenuItem>\r\n                            <MenuItem value={3}>3</MenuItem>\r\n                            <MenuItem value={4}>4</MenuItem>\r\n                            <MenuItem value={5}>5</MenuItem>\r\n                            <MenuItem value={6}>6</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <IconButton aria-label=\"Add to Cart\" onClick={() => onAddToCart(product.id, quantity, subtotal_price, cart.cart.id)}>\r\n                        <AddShoppingCart />\r\n                    </IconButton>\r\n\r\n                </CardActions>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n// , cart.cart.id\r\nexport default Product\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Products\\Product\\style.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\index.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Cart\\Cart.jsx",["172","173"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Cart\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\Checkout.jsx",["174"],"import React, {useState} from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport {Paper, Typography} from '@material-ui/core';\r\nimport useStyles from './styles'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\nconst Checkout = ({handleSubmitUser}) => {\r\n    // debugger;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n          <div className={classes.toolbar}/> \r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>                \r\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                <div>\r\n                <ContactForm handleSubmitUser={handleSubmitUser} />\r\n                </div>\r\n            </Paper>\r\n          </main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\ContactForm.jsx",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\CheckoutForm\\ConfirmForm.jsx",["175","176","177"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Home\\Home.jsx",["178","179","180"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Container, Typography, Button, List } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nconst Home = ({createCart}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <Container className={classes.container}>\r\n                <div className={classes.content}>\r\n                    <div className={classes.titleContainer}>\r\n                        <span className={classes.title}>Bakery Abel</span>\r\n                    </div>\r\n                    <div className={classes.btnContainer}>\r\n                        <Button component={Link} to=\"/product\" size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={()=>createCart()}>Order</Button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\Home\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\OrderDetails\\OrderDetails.jsx",["181"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\client\\src\\components\\OrderDetails\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\index.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\App.js",["182","183","184"],"import React, { useState, useEffect } from 'react';\nimport { Home, Products, Navbar, Cart, Checkout, OrderDetails } from './components';\nimport ConfirmForm from './components/CheckoutForm/ConfirmForm.jsx';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [user, setUser] = useState('');\n  const [cart, setCart] = useState('');\n  const [confirmedOrder, setConfirmedOrder] = useState([])\n  const [confirmedCart, setConfirmedCart] = useState([])\n\n//*PRODUCTS*//\n  const fetchProducts = () => {\n    fetch(\"http://localhost:3000/product/get\", {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'sessionToken'\n      })\n    }).then((res)=> res.json())\n    .catch((error) => {\n      console.log(error)\n    })\n    .then((products) => {      \n      console.log(products)\n      return setProducts(products)      \n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n//*ORDER*//\n  const fetchOrder = () => {\n    // debugger;\n    fetch(\"http://localhost:3000/order/getall\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Content-Type\": 'application/json',\n        'Authorization': 'sessionToken'\n      })\n    }).then((res)=>res.json())\n    .catch((error) => {\n      console.log(error)\n    })\n    .then((orders)=>{      \n      console.log(orders)\n      return setOrders(orders)\n      //方法２　isConfirmedが取得されていないもののみをreturnする方法\n      // let filterdOrders = orders.filter((order, id)=> order.isConfirmed === null) \n      // console.log(filterdOrders)\n      // return setOrders(filterdOrders)\n    })\n    .catch((error)=> {\n      console.log(error)\n    })\n  }\n\n  // const handleSubmitCart = (cartId, subtotal, tax, total, pickup_date, estimated_time, userId, orderId, isConfirmed) => {\n  //   debugger;\n  //   addToCart(cartId, subtotal, tax, total, pickup_date, estimated_time, userId);\n  //   orderconfirmed(orderId, isConfirmed);\n  // };\n\n  const fetchOrderbyCartId = (cartId) =>{\n    // debugger;\n    fetch(`http://localhost:3000/order/getallbycart/${cartId}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'sessionToken'\n      })\n      \n    }).then((res)=>res.json())\n    \n    .then((confirmedOrder)=>{\n      console.log(confirmedOrder)\n      return setConfirmedOrder(confirmedOrder)\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n  }\n\n  const handleAddToOrder = (productId, qty, subtotal_price, cartId) => {\n      // debugger;\n      fetch(`http://localhost:3000/order/create/${productId}/${qty}/${subtotal_price}/${cartId}`, {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': 'sessionToken'\n        })\n      })     \n      .then((res)=> res.json())         \n      .then((order) => {                \n        console.log(order);\n        return fetchOrder(order);        \n      })\n      .catch((error) => {\n        console.log(error)\n      })          \n  }\n\n  const handleUpdateOrder = (orderId, productId, qty, subtotal_price) => {\n    // debugger;\n    fetch(`http://localhost:3000/order/update/${orderId}/${productId}/${qty}/${subtotal_price}`, {\n      method: 'PUT',\n      body:JSON.stringify({orderId, productId, qty, subtotal_price}),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'sessionToken'\n      })\n    })\n    .then((res)=> res.json())         \n    .then((orders) => {        \n      // debugger;\n      console.log(orders);\n      // setOrders(orders)\n      return fetchOrder(orders);      \n    })\n    .catch((error) => {\n      console.log(error)\n    })\n    // debugger;           \n}\n\nconst handleDeleteOrder = (orderId) => {\n  // debugger;\n  fetch(`http://localhost:3000/order/delete/${orderId}`, {\n    method: 'DELETE',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': 'sessionToken'\n    })\n  })  \n  .then(()=> {\n    fetchOrder();\n    return fetchOrder()}) \n    // debugger;             \n}\n\nconst handleDeleteAllOrder = () =>{\n  // debugger;\n  fetch('http://localhost:3000/order/deleteall',{\n    method: 'DELETE',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': 'sessionToken'\n    })\n  })\n  .then(()=>{\n    fetchOrder();\n    return fetchOrder()\n  })\n  }\n\n\n//*USER*//\nconst handleSubmitUser = (firstname, lastname, mobile, email) => {\n  userRegister(firstname, lastname, mobile, email);\n  getUserByMobile(firstname, mobile);\n};\n\n    \n  const userRegister=(firstname, lastname, mobile, email)=>{\n    fetch(`http://localhost:3000/user/customer_create/${firstname}/${lastname}/${mobile}/${email}`, {\n        method: 'POST',\n        body: JSON.stringify({user: {firstname: firstname, lastname: lastname, mobile: mobile, email: email}}),\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': 'sessionToken'\n        })\n    })     \n    .then((res)=> res.json(firstname, lastname, mobile, email))         \n    .then((user) => {  \n        // debugger;         \n      console.log(user);\n      setUser(user)\n        \n      return setUser(user)\n    })\n    .catch((error) => {\n      console.log(error)\n    }) \n  }  \n\n  const getUserByMobile = (firstname, mobile)=>{\n      \n    fetch(`http://localhost:3000/user/getbymobile/${firstname}/${mobile}`, {\n        method: 'GET',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': 'sessionToken'\n      })\n    })\n    .then((res)=> res.json())\n    .catch((error) => {\n      console.log(error)\n    })\n    .then((user) => { \n      // debugger;       \n      console.log(user)\n      setUser(user)\n      return setUser(user)      \n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n//*CART*// \nconst fetchCart = ()=>{\n  // debugger;\n  fetch('http://localhost:3000/cart/getall', {\n      method: 'GET',\n      headers: new Headers({\n          \"Content-Type\": 'application/json',\n          'Authorization': 'sessionToken'\n      })\n  }).then((res)=>res.json())\n  .then((carts)=>{\n    console.log(carts)\n    return setCart(carts)\n  })\n  .catch((error)=>{\n      console.log(error)\n  })\n}\n\nconst createCart=()=> {\n  // debugger;\n  fetch(`http://localhost:3000/cart/create`, {\n    method: 'POST',\n    headers: new Headers({\n      \"Content-Type\": 'application.json',\n      'Authorization': 'sessionToken'\n    })\n  }).then((res)=>res.json())\n  .then((cart)=>{\n    // console.log(cart)\n    // console.log(cart.cart.id)\n    var cartId = JSON.parse(JSON.stringify(cart.cart.id))\n    setCart(cart)\n    console.log(cartId)\n    return cartId\n  })\n  .catch((error)=>{\n    console.log(error)\n  })\n}\n\nconst handleEmptyCart = (cartId) => {\n  // debugger;\n  fetch(`http://localhost:3000/cart/delete/${cartId}`, {\n    method: 'DELETE',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': 'sessionToken'\n    })\n  })     \n  .then(()=> {\n    fetchCart();\n    return fetchCart()}) \n              \n}\n\nconst orderconfirmed = (orderId, isConfirmed) =>{\n// debugger;\n  fetch(`http://localhost:3000/order/orderconfirmed/${orderId}/${isConfirmed}`, {\n    method: 'PUT',\n    body:JSON.stringify({orderId, isConfirmed}),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'sessionToken'\n      })\n    })\n    .then((res)=> res.json())         \n    .then((orders) => {        \n      // debugger;\n      console.log(orders);\n      // return setOrders(orders)\n      return fetchOrder(orders);      \n    })\n    .catch((error) => {\n      console.log(error)\n    })\n    // debugger;           \n}\n\nconst addToCart = (cartId, subtotal, tax, total, pickup_date, estimated_time, userId) =>{\n  // debugger;\n  fetch(`http://localhost:3000/cart/update/${cartId}/${subtotal}/${tax}/${total}/${pickup_date}/${estimated_time}/${userId}`,{\n      method: 'PUT',\n      body:JSON.stringify({cartId, subtotal, tax, total, pickup_date, estimated_time, userId}),\n      headers: new Headers({\n          \"Content-Type\": 'application/json',\n          'Authorization': 'sessionToken'\n      })\n  }).then((res)=>res.json())\n  .then((cart)=>{      \n      console.log(cart)\n      var cartId = JSON.parse(JSON.stringify(cart.cartId))\n      fetchCartbyCartId(cartId);\n      // setCart(cart)\n      // addCartNumberToOrder()\n      return setCart(cart)\n  })\n  .catch((error)=>{\n      console.log(error)\n  })\n}\n\nconst fetchCartbyCartId = (cartId) =>{\n  // debugger;\n  fetch(`http://localhost:3000/cart/get/${cartId}`, {\n    method: 'GET',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': 'sessionToken'\n    })\n    \n  }).then((res)=>res.json())\n  \n  .then((confirmedCart)=>{\n    console.log(confirmedCart)\n    return setConfirmedCart(confirmedCart)\n  })\n  .catch((error)=>{\n    console.log(error)\n  })\n}\n\n  useEffect(()=>{\n    fetchProducts();\n    fetchOrder();\n    fetchCart();\n  }, []);\n  \n  if(!cart.id && cart.id){\n  console.log(cart)\n  var cartid = cart.cart.id\n    console.log(cart.cart.id)\n    \n    var cartId = JSON.stringify(cartid)\n    console.log(cartId)\n    return cartId\n  }\n\n\n    var filterdOrders =  orders.filter((order, id)=> order.isConfirmed === null) \n    console.log(filterdOrders)\n\n\n\n  var userId = JSON.stringify(user.id);\n  var userfname = JSON.stringify(user.firstname);\n  var userlname = JSON.stringify(user.lastname);\n  var usermobile = JSON.stringify(user.mobile);\n  var useremail = JSON.stringify(user.email);\n\n  const subtotalcal =() =>(orders.length>0 && orders.reduce((a,v)=>a = a + (v.subtotal_price*1), 0));\n  const taxcal =()=>(Math.round((((orders.length>0 && orders.reduce((a,v)=>a = a + (v.subtotal_price*1), 0)) * 0.07) + Number.EPSILON)*100)/100);\n  const totalcal = subtotalcal()+taxcal();\n\n  //  if(!cart.length) return 'cart Loading...'; \n  //  if(!orders.length) return 'order Loading...';\n  // debugger;\n  return (\n    \n    <Router>\n      <div className=\"App\">\n          <Navbar totalOrders={filterdOrders.length}/>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home createCart={createCart}/>\n            </Route>\n            <Route exact path=\"/product\">\n              <Products products={products} cart={cart} onAddToCart={handleAddToOrder}/>\n            </Route>\n            <Route exact path=\"/order\">\n                <Cart               \n                      cart={cart}                      \n                      cartId={cartId}\n                      orders={orders}\n                      filterdOrders={filterdOrders}\n                      subtotal={subtotalcal()}\n                      tax={taxcal()}\n                      total={totalcal}\n                      fetchOrder={fetchOrder}\n                      handleUpdateOrder={handleUpdateOrder}\n                      handleDeleteOrder={handleDeleteOrder}\n                      handleDeleteAllOrder={handleDeleteAllOrder}\n                      \n                      />                \n            </Route>\n            <Route exact path=\"/checkout\">\n              <Checkout handleSubmitUser={handleSubmitUser} />\n            </Route>\n            <Route exact path=\"/confirm\">\n              <ConfirmForm cart={cart} cartId={cartId} user={user} userId={userId} userfname={userfname} userlname={userlname} usermobile={usermobile} useremail={useremail} orders={orders} subtotal={subtotalcal()} tax={taxcal()} total={totalcal}  addToCart={addToCart} orderconfirmed={orderconfirmed}/>\n            </Route>\n            <Route exact path=\"/orderdetails\">\n                  <OrderDetails cart={cart} orders={orders} filterdOrders={filterdOrders} confirmedCart={confirmedCart}/>\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  )\n}\n// handleSubmitCart={handleSubmitCart} \nexport default App;\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\ConfirmForm.jsx",["185","186","187"],"import React, {useState} from 'react';\r\nimport {Paper, Button, Typography, Input, FormControl, Select, MenuItem, Grid} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport useStyles from './styles'\r\nimport {Link} from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport moment from 'moment'\r\n\r\nconst ConfirmForm = ({cart, user, userId, userfname, userlname, usermobile, useremail, orders, filterdOrders, subtotal, tax, total, addToCart, orderconfirmed, handleSubmitCart}) => {\r\n    // debugger;\r\n    console.log(cart)\r\n    console.log(userId)\r\n    console.log(cart.cart.id)\r\n    var cartId = JSON.parse(JSON.stringify(cart.cart.id))\r\n    console.log(cartId)\r\n\r\n    const classes = useStyles();\r\n    const [orderId, setOrderId] = useState('')\r\n    const [calDate, setCalDate] = useState(new Date())\r\n    const [time, setTime] = useState('');\r\n\r\n    // if(!cart.id && cart.id){\r\n    //     // console.log(cart)\r\n    //     console.log(cart.cart.id)\r\n    //     // var cartid = cart.cart.id\r\n    //     // var cartId = JSON.stringify(cartid)\r\n    //     var cartId = JSON.parse(JSON.stringify(cart.cart.id))\r\n    //     console.log(cartId)\r\n    //     return cartId\r\n    //    }\r\n\r\n    function onChange(calDate){\r\n        setCalDate(calDate)\r\n    };\r\n    // debugger;\r\n    var FilteredOrders = orders.filter((order, id)=> order.isConfirmed === null) \r\n    console.log(FilteredOrders)\r\n    \r\n    \r\n    // var cartId = (Math.random()+Math.random() + Math.random());\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.toolbar}/> \r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>                \r\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                <div className={classes.toolbar}/> \r\n                <Typography variant=\"h6\" gutterBottom>Please confirm order details.</Typography>\r\n                <div style={{display: 'flex', flexDirection: 'column', textAlign: 'center', margin: '0 2vw'}}>\r\n                    <div style={{displey: 'flex', flexDirection: 'column', justifyContent:'center'}}>\r\n                        <p className={classes.detailtitle}>Contact information</p>\r\n                        <div style={{display:'flex'}} >\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">First Name</TableCell>\r\n                                        <TableCell align=\"center\">Last Name</TableCell>\r\n                                        <TableCell align=\"center\">Mobile</TableCell>\r\n                                        <TableCell align=\"center\">E-mail</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableCell>{user.firstname}</TableCell>\r\n                                    <TableCell>{user.lastname}</TableCell>\r\n                                    <TableCell>{user.mobile}</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <p className={classes.detailtitle}>Order items</p>\r\n                        <Table >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Order No.</TableCell>\r\n                                    <TableCell>Item name</TableCell>\r\n                                    <TableCell>Quantity</TableCell>\r\n                                    <TableCell>Subtotal($)</TableCell>\r\n                            \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {FilteredOrders && FilteredOrders.map((order, id)=>(\r\n                            <TableRow key={id}>                          \r\n                                <div>{order.orderId}</div>\r\n                                <TableCell align=\"left\">{order.product.name}</TableCell>\r\n                                <TableCell align=\"center\">{order.qty}</TableCell>\r\n                                <TableCell align=\"center\">{order.subtotal_price}</TableCell>\r\n                                <div>\r\n                                <Button style={{minWidth:'10%', margin: '2px 5px', padding: '1px 10px', backgroundColor: 'pink'}} type=\"button\" variant=\"contained\"><CheckIcon onClick={()=>orderconfirmed(order.orderId, true)}/></Button>\r\n                            </div>\r\n\r\n                             \r\n                            </TableRow>\r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <p className={classes.detailtitle}>Payment</p>\r\n                        <div style={{textAlign:'right'}}>\r\n                            <p>Subtotal: ${subtotal}</p><p>Tax: ${tax}</p><p>Total: ${total}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={classes.toolbar}/> \r\n                <Typography variant=\"h6\" gutterBottom>Pick-up date & time</Typography>\r\n                    <div style={{display:'flex', flexDirection: 'column'}}>\r\n                        <div style={{margin: '2vh auto'}}>\r\n                        <Calendar onChange={onChange} value={calDate} />\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{display: 'flex', justifyContent:'space-around'}}>\r\n                            <FormControl>\r\n                                <label style={{marginTop:'5px', fontSize:'15px'}}>Pick-up date</label>\r\n                                <Input style={{margin: '0 10px', width: '200px', textAlign: 'center'}} required value={moment(calDate).format(\"MMM Do YY\")} onChange={e=>setCalDate(e.target.value)} name='Date'/>\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl}>\r\n                                <label style={{marginTop:'5px', fontSize:'15px'}}>Estimated Time</label>\r\n                                <Select style={{margin: '0 10px', width: '200px', textAlign: 'center'}}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={time}\r\n                                onChange={(e)=>setTime(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={1}>1: 10:00AM-12:00PM</MenuItem>\r\n                                    <MenuItem value={2}>2: 12:00PM-2:00PM</MenuItem>\r\n                                    <MenuItem value={3}>3: 2:00PM-4:00PM</MenuItem>\r\n                                    <MenuItem value={4}>4: 4:00PM-6:00PM</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to=\"/order\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button component={Link} to=\"/checkout\" variant=\"outlined\">BACK TO CONTACT FORM</Button>\r\n                        \r\n                        <Button component={Link} to=\"/orderdetails\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={()=>addToCart(cartId, subtotal, tax, total, calDate, time, userId )}>Checkout</Button>\r\n                    </div>\r\n            </Paper>\r\n         </main>\r\n        </>\r\n    )\r\n}\r\n// orderId, (Math.random()) onSubmit={()=>fetchOrderbyCartId(cartId)}\r\nexport default ConfirmForm\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\index.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\Checkout.jsx",["188"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Navbar\\Navbar.jsx",["189","190"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nimport logo from '../../asset/—Pngtree—dim sum cake bakery billboard_5320634.png';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({totalOrders}) => {\r\n    // debugger;\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Bakery Abel\" height=\"25px\" className={classes.image}/>\r\n                        Bakery Abel\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/product' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/order\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalOrders} color=\"secondary\">\r\n                                <ShoppingCartIcon/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>)}\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Home\\Home.jsx",["191","192","193"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Products.jsx",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Cart\\Cart.jsx",["194","195"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Typography, Button, List } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; \r\nimport useStyles from './styles';\r\n\r\n\r\nconst Cart = ({ cart, orders, filterdOrders, subtotal, tax, total, handleUpdateOrder, handleDeleteOrder, handleDeleteAllOrder, orderconfirmed }) => {\r\n    // debugger;\r\n    const classes = useStyles();\r\n    // console.log(cart)\r\n    // console.log(cart.cart.id)\r\n\r\n    if(!cart && cart){\r\n    console.log(cart.cart.id)\r\n    var cartId = cart.cart.id\r\n    console.log(cartId)\r\n    return cartId\r\n    }\r\n\r\n    const EmptyCart = () => (\r\n        <Typography style={{display: 'flex', flexDirection: 'column'}}>You have no item in your shopping cart.\r\n            <Link to=\"/\" className={classes.link}>Restart order.</Link>\r\n        </Typography>\r\n    );\r\n// debugger;\r\n    const FilledCart = () => (\r\n        <>\r\n            <List className={classes.list}>                \r\n                {filterdOrders && filterdOrders.sort(({productId: previousID}, {productId: currentID}) => previousID - currentID ).map((order, id) => (\r\n                    \r\n                    <div key={id} className={classes.item}>\r\n                        <div>{order.orderId}</div>\r\n                        <div>\r\n                            <img  className={classes.image} src={order.product.image} alt=\"/\"></img>\r\n                        </div>\r\n                        <div className={classes.detail}>\r\n                            <div className={classes.name_qty}>                        \r\n                                <div>{order.product.name}</div>\r\n                                <div>${order.product.unit_price} /ea.</div>\r\n                                <div style={{display:'flex', justifyContent:'space-between', margin: '10px 0 0 0'}}>\r\n                                    <Button type=\"button\" size=\"small\" onClick={()=> handleUpdateOrder(order.orderId, order.product.id, order.qty - 1, order.product.unit_price*(order.qty -1))}><span style={{position: 'relative', backgroundColor:'pink', padding: '0 4px', borderRadius: '50%'}}><ExpandMoreIcon style={{margin: '2px', paddingTop: '3px'}}/></span></Button>                                   \r\n                                    <Typography>{order.qty}</Typography>\r\n                                    <Button type=\"button\" size=\"small\" onClick={()=> handleUpdateOrder(order.orderId, order.product.id, (order.qty + 1), order.product.unit_price*(order.qty +1))}><span style={{position: 'relative', backgroundColor:'pink', padding: '0 4px', borderRadius: '50%'}}><ExpandLessIcon style={{margin: '2px', paddingTop: '3px'}}/></span></Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subtotal}>subtotal price: ${order.subtotal_price}</div>\r\n                        </div>\r\n                        <div className={classes.itemIcons}>\r\n\r\n                            {/* <div>\r\n                                <Button style={{minWidth:'10%', margin: '2px 5px', padding: '1px 10px', backgroundColor: 'pink'}} type=\"button\" variant=\"contained\"><CheckIcon onClick={()=>orderconfirmed(order.orderId, true)}/></Button>\r\n                            </div> */}\r\n                            \r\n\r\n                            <div className={classes.icons}>\r\n                                <Button style={{minWidth:'10%', margin: '2px 5px', padding: '1px 10px', backgroundColor: 'pink'}} type=\"button\" variant=\"contained\"><DeleteForeverIcon onClick={() => handleDeleteOrder(order.orderId)}/></Button>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>                       \r\n                ))}\r\n                \r\n            </List>\r\n            <div className={classes.cardDetails}>\r\n                <form>\r\n                <Typography htmlFor=\"subtotal\" style={{textAlign:'right', margin: '0 3vw'}} variant=\"h6\">\r\n                    Subtotal: $ {subtotal}\r\n                </Typography>\r\n                <Typography htmlFor=\"tax\" style={{textAlign:'right', margin: '0 3vw'}} variant=\"h6\">\r\n                    Tax: $ {tax}\r\n                </Typography>\r\n                <Typography style={{textAlign:'right', margin: '0 3vw 6vh 0'}} variant=\"h5\">\r\n                    Total: $ {total}\r\n                </Typography>\r\n             </form>   \r\n            </div>\r\n\r\n            <div style={{textAlign: 'center'}}>\r\n                <Button component={Link} to=\"/\"  className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={()=>handleDeleteAllOrder()}>Empty Cart</Button>\r\n                <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\" >Checkout</Button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n//  if(!orders.length) return 'Loading...';\r\nif(!cart) return 'Loading...';\r\n\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar}/>\r\n            <Typography className={classes.title} variant=\"h4\">Your Shopping Cart</Typography>\r\n            <div className={classes.toolbar}/>\r\n            { !orders.length ? <div>{EmptyCart()}</div> : <div>{FilledCart()}</div>}\r\n            {/* <div className={classes.toolbar}/> */}           \r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n// onClick={()=>addToCart(subtotal, tax, total)}\r\nexport default Cart\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\OrderDetails\\OrderDetails.jsx",["196"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport {Paper, Typography, Input} from '@material-ui/core';\r\n\r\nconst OrderDetails = ({cart, orders }) => {\r\n// debugger;\r\n  console.log(cart)\r\n  console.log(cart.cartId)\r\n  console.log(orders)\r\n  const classes = useStyles();\r\n\r\n  // var cartid = JSON.stringify(cart.cart.id)\r\n\r\n  // if(!cart.cartId && cart.cartId){\r\n  //   var cartid = JSON.stringify(cart.cartId)\r\n  //   console.log(cartid)\r\n  //   return cartid\r\n  // };\r\n  // var pickup_date = JSON.parse(JSON.stringify(cart.pickup_date))\r\n  // console.log(pickup_date)\r\n  // var totalprice = JSON.parse(JSON.stringify(cart.total_price))\r\n  // console.log(totalprice)\r\n  // var cart_total_price = JSON.parse(JSON.stringify(cart.cart.total_price))\r\n  // console.log(cart_total_price)\r\n\r\n    var date = cart.pickup_date\r\n    var newDate = new Date(date);\r\n    var fd = newDate.toDateString();\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n          <div className={classes.toolbar}/> \r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>                \r\n                <Typography variant=\"h4\" align=\"center\">Thank you for shopping!</Typography>\r\n                <div>\r\n                  <p>Your confirmation number is <span className={classes.confirmedInfo}>{cart.cartId}</span>.</p>\r\n                  <p>Your total payment is <span className={classes.confirmedInfo}>${cart.total_price}</span>.</p>\r\n                  <p>We are looking forward to seeing you on <span className={classes.confirmedInfo}>{fd}</span>.</p>\r\n                </div>\r\n            </Paper>\r\n          </main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Navbar\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Home\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Cart\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\OrderDetails\\styles.js",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\CheckoutForm\\ContactForm.jsx",[],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Product\\Product.jsx",["197"],"C:\\Mizue's folder\\Client_Server\\Bakery_Abel\\Bakery_Abel_Client\\src\\components\\Products\\Product\\style.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":67,"column":9,"nodeType":"204","messageId":"205","endLine":67,"endColumn":27},{"ruleId":"202","severity":1,"message":"207","line":254,"column":7,"nodeType":"204","messageId":"205","endLine":254,"endColumn":22},{"ruleId":"202","severity":1,"message":"208","line":2,"column":46,"nodeType":"204","messageId":"205","endLine":2,"endColumn":54},{"ruleId":"202","severity":1,"message":"209","line":2,"column":56,"nodeType":"204","messageId":"205","endLine":2,"endColumn":60},{"ruleId":"202","severity":1,"message":"210","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":18},{"ruleId":"202","severity":1,"message":"211","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"212","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"213","line":2,"column":74,"nodeType":"204","messageId":"205","endLine":2,"endColumn":78},{"ruleId":"202","severity":1,"message":"214","line":24,"column":12,"nodeType":"204","messageId":"205","endLine":24,"endColumn":19},{"ruleId":"202","severity":1,"message":"215","line":24,"column":21,"nodeType":"204","messageId":"205","endLine":24,"endColumn":31},{"ruleId":"202","severity":1,"message":"213","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"216","line":3,"column":27,"nodeType":"204","messageId":"205","endLine":3,"endColumn":37},{"ruleId":"202","severity":1,"message":"217","line":3,"column":47,"nodeType":"204","messageId":"205","endLine":3,"endColumn":51},{"ruleId":"202","severity":1,"message":"218","line":3,"column":28,"nodeType":"204","messageId":"205","endLine":3,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":67,"column":9,"nodeType":"204","messageId":"205","endLine":67,"endColumn":27},{"ruleId":"202","severity":1,"message":"207","line":254,"column":7,"nodeType":"204","messageId":"205","endLine":254,"endColumn":22},{"ruleId":"202","severity":1,"message":"213","line":2,"column":74,"nodeType":"204","messageId":"205","endLine":2,"endColumn":78},{"ruleId":"202","severity":1,"message":"214","line":24,"column":12,"nodeType":"204","messageId":"205","endLine":24,"endColumn":19},{"ruleId":"202","severity":1,"message":"215","line":24,"column":21,"nodeType":"204","messageId":"205","endLine":24,"endColumn":31},{"ruleId":"202","severity":1,"message":"211","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"208","line":2,"column":46,"nodeType":"204","messageId":"205","endLine":2,"endColumn":54},{"ruleId":"202","severity":1,"message":"209","line":2,"column":56,"nodeType":"204","messageId":"205","endLine":2,"endColumn":60},{"ruleId":"202","severity":1,"message":"213","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"216","line":3,"column":27,"nodeType":"204","messageId":"205","endLine":3,"endColumn":37},{"ruleId":"202","severity":1,"message":"217","line":3,"column":47,"nodeType":"204","messageId":"205","endLine":3,"endColumn":51},{"ruleId":"202","severity":1,"message":"211","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"212","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"218","line":3,"column":28,"nodeType":"204","messageId":"205","endLine":3,"endColumn":33},{"ruleId":"202","severity":1,"message":"210","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":18},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'confirmedOrder' is assigned a value but never used.","Identifier","unusedVar","'fetchOrderbyCartId' is assigned a value but never used.","'handleEmptyCart' is assigned a value but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'InputLabel' is defined but never used.","'useState' is defined but never used.","'CheckIcon' is defined but never used.","'Grid' is defined but never used.","'orderId' is assigned a value but never used.","'setOrderId' is assigned a value but never used.","'Typography' is defined but never used.","'List' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]